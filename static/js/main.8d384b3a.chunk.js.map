{"version":3,"sources":["assets/logo_icon.png","assets/about_icon.png","components/BuildingDetail.jsx","components/Home.jsx","components/Navbar.jsx","components/About.jsx","App.js","reportWebVitals.js","index.js","assets/large_logo.png"],"names":["module","exports","__webpack_require__","p","BuildingDetail","studySpots","setStudySpots","useState","buildingName","useParams","useEffect","fetch","concat","then","response","json","data","catch","error","console","React","createElement","class","map","spot","name","src","url","GoogleApiWrapper","apiKey","_ref","google","navigate","useNavigate","className","id","large_logo","alt","Map","zoom","initialCenter","lat","lng","index","Marker","key","position","long","onClick","encodeURIComponent","building","onMarkerClick","Navbar","Link","to","logo_icon","about_icon","About","App","coords","success","pos","crd","log","latitude","longitude","accuracy","errors","err","warn","code","message","options","enableHighAccuracy","timeout","maximumAge","navigator","geolocation","permissions","query","result","state","getCurrentPosition","Router","Routes","Route","path","element","Home","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8d384b3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_icon.c016ae22.png\";","module.exports = __webpack_public_path__ + \"static/media/about_icon.3bbf5f46.png\";","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport \"../stylesheets/BuildingDetail.css\";\r\n\r\nfunction BuildingDetail() {\r\n  const [studySpots, setStudySpots] = useState([]);\r\n  let { buildingName } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(`http://127.0.0.1:5000/api/study_spots/building/${buildingName}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n         setStudySpots(data);\r\n              })\r\n      .catch((error) => {\r\n        console.error('Error fetching study spots:', error);\r\n      });\r\n  }, [buildingName]);\r\n\r\n    return (\r\n      <div class = \"building\">\r\n        <h2>Study Spots in {buildingName}</h2>\r\n        <div class = \"gallery\">\r\n          {studySpots.map((spot) => (\r\n          <div class=\"box\">\r\n            <h3>{spot.name}</h3>\r\n            <img src={spot.url} />\r\n          </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default BuildingDetail;\r\n","import React, { Component, useContext, useState, useEffect } from 'react';\r\nimport { Navigate, redirect, useNavigate, Link } from 'react-router-dom';\r\nimport \"../App.css\";\r\nimport \"../stylesheets/Home.css\";\r\nimport large_logo from \"../assets/large_logo.png\";\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport BuildingDetail from './BuildingDetail'\r\n\r\n\r\n\r\nfunction Home({ google }) {\r\n  const [studySpots, setStudySpots] = useState([]);\r\n  const navigate = useNavigate(); // useNavigate hook for navigation\r\n\r\n    useEffect(() => {\r\n        fetch('http://127.0.0.1:5000/api/study_spots')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            setStudySpots(data);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching study spots:', error);\r\n          });\r\n      }, []);\r\n\r\n    const onMarkerClick = (spot) => {\r\n        navigate(`/studyspots/${encodeURIComponent(spot.building)}`);\r\n      };\r\n\r\n    const renderMarkers = () => {\r\n        return studySpots.map((spot, index) => (\r\n          <Marker\r\n            key={index}\r\n            position={{ lat: spot.lat, lng: spot.long }}\r\n            name={spot.name}\r\n            onClick={() => onMarkerClick(spot)}\r\n          />\r\n        ));\r\n      };\r\n\r\n   const initialCenter = { lat: 43.0766, lng: -89.4125 };\r\n\r\n     return (\r\n       <div className=\"home page\">\r\n         <img id='large-logo' src={large_logo} alt=\"badger burrow\" />\r\n         <Map\r\n           google={google}\r\n           zoom={16}\r\n           initialCenter={initialCenter}\r\n         >\r\n           {renderMarkers()}\r\n           <Marker onClick={() => navigate('/current-location')} name={'Current location'} />\r\n         </Map>\r\n       </div>\r\n     );\r\n   }\r\n\r\n   export default GoogleApiWrapper({\r\n     apiKey: 'AIzaSyB0DSQyxeTXhJzRNEVwQ3khFG7QHX53Yxo'\r\n   })(Home);\r\n","import React, { useContext, useState, useEffect} from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport \"../App.css\";\r\nimport \"../stylesheets/Navbar.css\";\r\nimport logo_icon from \"../assets/logo_icon.png\";\r\nimport about_icon from \"../assets/about_icon.png\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <div class = \"navigate\">\r\n            <nav>\r\n                <i>\r\n                    <Link className = \"nav-link\" to = \"/studyspots/\">\r\n                        <img id = \"logo-icon\" src = {logo_icon} alt = \"logo icon\"/>\r\n                    </Link>\r\n                </i>\r\n                <i>\r\n                    <Link className = \"nav-link\" to = \"/studyspots/about\">\r\n                        <img id = \"about-icon\" src = {about_icon} alt = \"about icon\"/>\r\n                    </Link>\r\n                </i>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useContext, useState, useEffect} from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport \"../App.css\";\r\nimport \"../stylesheets/About.css\";\r\nimport large_logo from \"../assets/large_logo.png\";\r\n\r\n\r\nconst About = () => {\r\n    return(\r\n        <div class = \"about page\">\r\n            <img id = 'large-logo' src = {large_logo} alt = \"badger burrow\"/>\r\n\r\n            <h2>why badger burrow?!</h2>\r\n\r\n            <p>\r\n                we are a group of underclassmen that created badger burrow to help fellow UW-Madison students\r\n                find cute study spots. as our school grows, it becomes harder and harder to find a spot of your own.\r\n                we're here to help!\r\n            </p>\r\n\r\n            <h2>how it works</h2>\r\n\r\n            <p>\r\n                badger burrow will ask you for your current location. upon receiving your location, it will then recommend a few nearby study spots for you!\r\n                ideally, badger burrow will one day be able to find study spots based on your preferences in location or vibe!\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { useEffect, useState, useContext } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport Navbar from './components/Navbar';\r\nimport About from './components/About';\r\nimport BuildingDetail from './components/BuildingDetail';\r\n\r\n\r\nfunction App() {\r\n  var coords;\r\n  function success(pos) {\r\n    var crd = pos.coords;\r\n    coords = crd;\r\n    console.log(\"Your current position is:\");\r\n    console.log(`Latitude : ${crd.latitude}`);\r\n    console.log(`Longitude: ${crd.longitude}`);\r\n    console.log(`More or less ${crd.accuracy} meters.`);\r\n  }\r\n\r\n  function errors(err) {\r\n    console.warn(`ERROR(${err.code}): ${err.message}`);\r\n  }\r\n\r\n  var options = {\r\n    enableHighAccuracy: true,\r\n    timeout: 5000,\r\n    maximumAge: 0,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.permissions\r\n      .query({ name: \"geolocation\"})\r\n      .then(function (result) {\r\n        console.log(result);\r\n        if (result.state === \"granted\") {\r\n          //If granted then you can directly call your function here\r\n          navigator.geolocation.getCurrentPosition(success, errors, options);\r\n        } else if (result.state === \"prompt\") {\r\n          //If prompt then the user will be asked to give permission\r\n          navigator.geolocation.getCurrentPosition(success, errors, options);\r\n        } else if (result.state === \"denied\") {\r\n          //If denied then you have to show instructions to enable location\r\n        }\r\n      });\r\n    } else {\r\n      console.log(\"Geolocation not supported\");\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <Routes>\r\n          <Route path=\"/studyspots/\" element={<Home coords = {coords}/>} />\r\n          <Route path=\"/studyspots/about\" element={<About />} />\r\n          <Route path=\"/studyspots/:buildingName\" element={<BuildingDetail />} />\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","module.exports = __webpack_public_path__ + \"static/media/large_logo.19957a37.png\";"],"sourceRoot":""}